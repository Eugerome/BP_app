openapi: "3.0.0"
info:
  version: "0.1.0"
  title: BP API

paths:
  /:
    get:
      responses:
        200:
          description: Say hello
          content:
            application/json: {}
        400:
          description: Bad Request

  /records:
    get:
      summary: Retrieve all records
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            format: date-time
            example: "2017-07-20T17:32:28Z"
        - in: query
          name: end_date
          schema:
            type: string
            format: date-time
            example: "2017-07-20T17:32:28Z"
      responses:
        200:
          description: All records returned
          content:
            application/json: {}
        204:
          description: No records found
        400:
          description: Bad Request
    post:
      summary: Create a blood pressure record
      requestBody:
        required: true
        description: A record to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
      responses:
        201:
          description: Record created
          content:
            application/json: {}
        400:
          description: Bad Request

  /records/{record_id}:
    get:
      summary: Retrieve record based on record_id
      parameters:
        - name: record_id
          in: path
          required: true
          description: Record record_id
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        200:
          description: Record returned
          content:
            application/json: {}
        400:
          description: Bad Request
        404:
          description: No Record found
    delete:
      summary: Delete record based on record_id
      parameters:
        - name: record_id
          in: path
          required: true
          description: Record record_id
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        202:
          description: Record deleted, returns Record
          content:
            application/json: {}
        204:
          description: No Record found
        400:
          description: Bad Request
    put:
      summary: Update record based on record_id
      parameters:
        - name: record_id
          in: path
          required: true
          description: Record record_id
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        description: Updated record data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
      responses:
        200:
          description: Record successfully updated, returns Record
          content:
            application/json: {}
        201:
          description: No record found, new one created, returns Record
          content:
            application/json: {}
        400:
          description: Bad Request

components:

  schemas:

    Record:
      type: object
      required:
        - bp_upper
        - bp_lower
      properties:
        record_id:
          type: integer
          format: int32
          # exclude in post/put forms - should be autogenerated/specified in url
          readOnly: true
          description: The primary key in db - any passed parameter in json gets ignored
          minimum: 0
          example: 2
        bp_upper:
          type: integer
          format: int32
          minimum: 70
          maximum: 370
          example: 120
        bp_lower:
          type: integer
          format: int32
          minimum: 20
          maximum: 370
          example: 60
        timestamp:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
        notes:
          type: string
          minLength: 1
          maxLength: 100
          example: Had a espresso one hour prior
